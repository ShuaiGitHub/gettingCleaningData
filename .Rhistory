getwd()
df<-read.csv("Train.csv",na.strings="NA",stringsAsFactors=FALSE)
View(df)
df<-read.csv("Train.csv",na.strings="NA",stringsAsFactors=TRUE)
View(df)
View(df)
source('~/Documents/rang_test/main.R')
source('~/Documents/rang_test/main.R')
View(df)
View(df)
View(df)
df<-read.csv("Train_modified.csv",na.strings="NA",stringsAsFactors=FALSE)
source('~/Documents/rang_test/main.R')
require(caret)
df<-read.csv("Train_modified.csv",na.strings="NA",stringsAsFactors=FALSE)
nzv <- nearZeroVar(df);
New_sub <- df[,-nzv];
View(New_sub)
class(New_sub$food151)
source('~/Documents/rang_test/main.R')
View(New_sub)
class(Trans40)
class(New_sub$Trans40)
str(New_sub)
View(New_sub)
model <- rpart( active_member ~ ., data=New_sub )
summary(model)
plot(model)
text(model)
source('~/Documents/rang_test/main.R')
source('~/Documents/rang_test/main.R')
source('~/Documents/rang_test/main.R')
install.packages("RMySQL")
require('RMySQL')
ucscDB <-dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
require('RMySQL')
hg19 <-dbConnect(MySQL(),user="genome",db="hg19",host="genome-mysql.cse.ucsc.edu")
length(dbListTables(hg19))
exit
setwd("~/Documents/getting and cleaning data")
fileURL <-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
tempFile <-tempfile()
download.file(fileURL,destfile = tempFile,method="curl")
idaho <- read.table(tempFile,sep=",",header=TRUE)
list<-grepl("wgtp",names(idaho))
list<-grepl("wgtp",names(idaho),value=TRUE)
list<-grep("wgtp",names(idaho),value=TRUE)
sep_list<-strsplit(list)
sep_list<-strsplit(list,"wgtp")
View(idaho)
sep_list<-strsplit(names(idaho),"wgtp")
sep_list[123]
gdpURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
tempFile <-tempfile()
download.file(fileURL,destfile = tempFile,method="curl")
idaho <- read.table(tempFile,sep=",",header=TRUE)
gdpURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
tempFile <-tempfile()
download.file(gdpURL,destfile = tempFile,method="curl")
idaho <- read.table(tempFile,sep=",",header=TRUE)
gdp <- read.table(tempFile,sep=",",header=TRUE)
View(idaho)
View(gdp)
gdpURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
tempFile <-tempfile()
download.file(gdpURL,destfile = tempFile,method="curl")
gdp <- read.csv(tempFile,sep=",",skip=5,nrows=190,header=FALSE,stringsAsFactors=FALSE)
View(gdp)
sub(",","",gdp$V5)
gdpVal<-sub(",","",gdp$V5)
sapply(gdp$V5,gdpVal)
gdpVal<-function (x){sub(",","",x)}
sapply(gdp$V5,gdpVal)
class(gdp$V5)
View(gdp)
val<-gdp$V5
val[1]
sub(",","",val[1])
gdpVal<-function (x){as.numeric(gsub(",","",x))}
sapply(gdp$V5,gdpVal)
class(gdp$V5)
mean(sapply(gdp$V5,gdpVal))
View(gdp)
grep("^United",gdp$V4)
GDPurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
EDUurl <-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
gdpData <-tempfile()
eduData <-tempfile()
download.file(GDPurl,destfile = gdpData,method="curl")
download.file(EDUurl,destfile = eduData,method="curl")
gdp <-read.csv(gdpData,sep=",",skip=5,nrows=190,header=FALSE,stringsAsFactors=FALSE)
edu <-read.csv(eduData,sep=",",header=TRUE,stringsAsFactors=FALSE)
newData = merge (gdp,edu,by.x="V1",by.y="CountryCode")
View(newData)
View(edu)
stringData <-newData$Special.Notes
head(stringData)
grep(^Fiscal,stringData,value=TRUE)
grep("^Fiscal",stringData,value=TRUE)
summary(grep("^Fiscal year end: June",stringData,value=TRUE))
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages(c("quant", "mod"))
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
View(amzn)
install.packages("lubridate")
getYR<-function(x){year(x),label=TRUE}
weekDay<-sapply(index(amzn),getYR)
getYR<-function(x){year(x),label=TRUE}
getYR<-function(x){year(x)}
YRs<-sapply(index(amzn),getYR)
library(lubridate)
getYR<-function(x){year(x)}
YRs<-sapply(index(amzn),getYR)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
library(lubridate)
getYR<-function(x){year(x)}
YRs<-sapply(index(amzn),getYR)
amzn$YRs<-sapply(index(amzn),getYR)
filter (amzn,YRs==2012)
availableRows<-filter (amzn,YRs==2012)
View(amzn)
summary(amzn[amzn$YRs==2012,])
availableRows<-amzn[amzn$YRs==2012,]
View(availableRows)
count(availableRows)
nrows(availableRows)
nrow(availableRows)
getWDay<-function(x){wday(x,value=TRUE)}
getWDay(availableRows[1])
getWDay<-function(x){wday(x,label=TRUE)}
getWDay(availableRows[1])
nrow(availableRows[getWDay(availableRows)==Tues,])
nrow(availableRows[getWDay(availableRows)=='Tues',])
View(availableRows)
nrow(availableRows[getWDay(availableRows)=='Mon',])
setwd("~/GitHub/gettingCleaningData")
list.files(dir)
list.files(path=dir)
list.files(path=dir)
list.files(path="./HCI HAR Dataset")
files<-list.files(path="./UCI HAR Dataset/train")
print(files)
files<-list.files(path="./UCI HAR Dataset/train/Inertial Signals")
print(files)
testData <-read.table(files[1],header=F,sep=" ")
testData <-read.table(paste0(subfolder,files[1]),header=F,sep=" ")
subfolder<-"./UCI HAR Dataset/train/Inertial Signals/"
testData <-read.table(paste0(subfolder,files[1]),header=F,sep=" ")
testData <-read.table(paste0(subfolder,files[1]),header=F,sep=" ")
subfolder<-"./UCI HAR Dataset/train/Inertial Signals/"
testData <-read.table(paste0(subfolder,files[1]),header=F,sep=" ")
files<-list.files(path="./UCI HAR Dataset/train/Inertial Signals")
subfolder<-"./UCI HAR Dataset/train/Inertial Signals/"
testData <-read.table(paste0(subfolder,files[1]),header=F,sep=" ")
paste0(subfolder,files[1])
testData <-read.table(full_name,header=F,sep=" ")
full_name<-paste0(subfolder,files[1])
testData <-read.table(full_name,header=F,sep=" ")
testData <-read.table(full_name,skip=1,header=F,sep=" ")
testData <-read.table(full_name,header=F)
View(testData)
subfolder<-"./UCI HAR Dataset/train/Inertial Signals/"
full_name<-paste0(subfolder,files[2])
testData <-read.table(full_name,header=F)
full_name<-paste0(subfolder,"subject_train.txt")
testData <-read.table(full_name,header=F)
subfolder<-"./UCI HAR Dataset/train/"
full_name<-paste0(subfolder,"subject_train.txt")
testData <-read.table(full_name,header=F)
subfolder<-"./UCI HAR Dataset/train/"
full_name<-paste0(subfolder,"X_train.txt")
testData <-read.table(full_name,header=F)
